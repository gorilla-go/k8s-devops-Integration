{{- if .Values.cron.mysqlBackup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: rsync-binlog
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "*/10 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 0
  startingDeadlineSeconds: 30
  jobTemplate:
    spec:
      backoffLimit: 0
      ttlSecondsAfterFinished: 10
      template:
        spec:
          containers:
            - name: mysql-backup-inc-dump
              image: bukaka/mysql-client:{{ .Values.mysql.version }}
              imagePullPolicy: IfNotPresent
              env:
                - name: MYSQL_HOST
                  value: {{ .Values.mysql.name }}-{{ .Values.mysql.backupIndex }}.{{ .Values.mysql.name }}-instances
                - name: MYSQL_PORT
                  value: "3306"
              command:
                - /bin/sh
                - -c
                - |
                  # ping mysql
                  if ! mysqladmin -h $MYSQL_HOST -P $MYSQL_PORT ping; then
                    echo "mysql is not ready."
                    exit 1;
                  fi

                  # get binlog name.
                  binlog_name=$(mysql -h $MYSQL_HOST -P $MYSQL_PORT -e "SHOW BINARY LOG STATUS\G" | grep "File" | awk '{print $2}' | awk -F. '{print $1}')
                  if [ -z "$binlog_name" ]; then
                    echo "No binlog found."
                    exit 1;
                  fi

                  # flush logs.
                  mysql -h $MYSQL_HOST -P $MYSQL_PORT -e "FLUSH LOGS;"
                  
                  # start to sync.
                  rsync -avz --mkpath --include="$binlog_name.[0-9]*" --exclude="*" /datadir/ /mysql-backup/mysqlbinlog/
              volumeMounts:
                - name: mysql-backup
                  mountPath: /mysql-backup
                - name: datadir
                  mountPath: /datadir
                - name: mysql-secret
                  mountPath: /etc/my.cnf
                  subPath: rootMysqlConfig
                  readOnly: true

          restartPolicy: Never
          affinity:
            podAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: mysql.oracle.com/cluster
                        operator: In
                        values:
                          - "{{ .Values.mysql.name }}"
                      - key: statefulset.kubernetes.io/pod-name
                        operator: In
                        values:
                          - "{{ .Values.mysql.name }}-{{ .Values.mysql.backupIndex }}"
                  topologyKey: kubernetes.io/hostname
          volumes:
            - name: datadir
              persistentVolumeClaim:
                claimName: datadir-{{ .Values.mysql.name }}-{{ .Values.mysql.backupIndex }}
            - name: mysql-backup
              persistentVolumeClaim:
                claimName: mysql-backup
            - name: mysql-secret
              secret:
                secretName: {{ .Values.mysql.rootSecretName }}
{{- end }}