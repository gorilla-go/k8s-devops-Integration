apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: docker
  namespace: {{ .Values.namespace }}
  labels:
    app: com.yesglasses.statefulset.docker
spec:
  selector:
    matchLabels:
      app: com.yesglasses.pod.docker
  serviceName: docker-registry
  replicas: 1
  template:
    metadata:
      labels:
        app: com.yesglasses.pod.docker
    spec:
      containers:
        - name: docker
          image: registry:2.8.3
          ports:
          - containerPort: 5000
            name: tcp-docker
          volumeMounts:
          - name: docker-data
            mountPath: /var/lib/registry
          - name: docker-config
            mountPath: /etc/docker/registry/config.yml
            subPath: config.yml
            readOnly: true
          - name: docker-secret
            mountPath: /auth/htpasswd
            subPath: htpasswd
            readOnly: true
          resources:
            limits:
              memory: 128Mi
              cpu: 100m
      volumes:
      - name: docker-config
        configMap:
          name: docker-config
      - name: docker-secret
        secret:
          secretName: docker-auth

  volumeClaimTemplates:
  - metadata:
      name: docker-data
    spec:
      storageClassName: aws-ebs
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: docker
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: com.yesglasses.pod.docker
  ports:
  - port: 5000
    targetPort: 5000
    name: tcp-docker
---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: registry
  namespace: {{ .Values.namespace }}
  annotations:
    nginx.ingress.kubernetes.io/service-upstream: 'true'
spec:
  rules:
    - host: {{ .Values.docker.host }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: docker
                port:
                  number: 5000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: docker-config
  namespace: {{ .Values.namespace }}
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    auth:
      htpasswd:
        path: /auth/htpasswd
        realm: "Registry Realm"
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3

---
apiVersion: v1
kind: Secret
metadata:
  name: docker-auth
  namespace: {{ .Values.namespace }}
stringData:
  htpasswd: |
    {{- range $k, $user := .Values.docker.users }}
    {{ htpasswd $user.username $user.password }}
    {{- end }}